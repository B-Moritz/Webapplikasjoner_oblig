// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webapplikasjoner_oblig.DAL;

#nullable disable

namespace Webapplikasjoner_oblig.Migrations
{
    [DbContext(typeof(TradingContext))]
    [Migration("20221005124136_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("FavoritesStocks", b =>
                {
                    b.Property<int>("FavoritesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StocksSymbol")
                        .HasColumnType("TEXT");

                    b.HasKey("FavoritesId", "StocksSymbol");

                    b.HasIndex("StocksSymbol");

                    b.ToTable("FavoritesStocks");
                });

            modelBuilder.Entity("SearchResultsStocks", b =>
                {
                    b.Property<string>("SearchResultsSearchKeyword")
                        .HasColumnType("TEXT");

                    b.Property<string>("StocksSymbol")
                        .HasColumnType("TEXT");

                    b.HasKey("SearchResultsSearchKeyword", "StocksSymbol");

                    b.HasIndex("StocksSymbol");

                    b.ToTable("SearchResultsStocks");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Favorites", b =>
                {
                    b.Property<int>("FavoritesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StocksId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FavoritesId");

                    b.HasIndex("UsersId")
                        .IsUnique();

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.SearchResults", b =>
                {
                    b.Property<string>("SearchKeyword")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SearchTimestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("SearchKeyword");

                    b.ToTable("SearchResults");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.StockOwnerships", b =>
                {
                    b.Property<int>("StockOwnershipsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StockCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StocksSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StockOwnershipsId");

                    b.HasIndex("StocksSymbol");

                    b.HasIndex("UsersId");

                    b.ToTable("StockOwnerships");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.StockQuotes", b =>
                {
                    b.Property<int>("StockQuotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Change")
                        .HasColumnType("REAL");

                    b.Property<string>("ChangePercent")
                        .HasColumnType("TEXT");

                    b.Property<double>("High")
                        .HasColumnType("REAL");

                    b.Property<string>("LatestTradingDay")
                        .HasColumnType("TEXT");

                    b.Property<double>("Low")
                        .HasColumnType("REAL");

                    b.Property<double>("Open")
                        .HasColumnType("REAL");

                    b.Property<double>("PreviousClose")
                        .HasColumnType("REAL");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("StocksSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Volume")
                        .HasColumnType("INTEGER");

                    b.HasKey("StockQuotesId");

                    b.HasIndex("StocksSymbol");

                    b.ToTable("StockQuotes");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Stocks", b =>
                {
                    b.Property<string>("Symbol")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Symbol");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Trades", b =>
                {
                    b.Property<int>("TradesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT");

                    b.Property<int>("StockId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StocksSymbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TradesId");

                    b.HasIndex("StocksSymbol");

                    b.HasIndex("UsersId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Users", b =>
                {
                    b.Property<int>("UsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FundsAvailable")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Fundsspent")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsersId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FavoritesStocks", b =>
                {
                    b.HasOne("Webapplikasjoner_oblig.DAL.Favorites", null)
                        .WithMany()
                        .HasForeignKey("FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webapplikasjoner_oblig.DAL.Stocks", null)
                        .WithMany()
                        .HasForeignKey("StocksSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SearchResultsStocks", b =>
                {
                    b.HasOne("Webapplikasjoner_oblig.DAL.SearchResults", null)
                        .WithMany()
                        .HasForeignKey("SearchResultsSearchKeyword")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webapplikasjoner_oblig.DAL.Stocks", null)
                        .WithMany()
                        .HasForeignKey("StocksSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Favorites", b =>
                {
                    b.HasOne("Webapplikasjoner_oblig.DAL.Users", "Users")
                        .WithOne("Favorites")
                        .HasForeignKey("Webapplikasjoner_oblig.DAL.Favorites", "UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.StockOwnerships", b =>
                {
                    b.HasOne("Webapplikasjoner_oblig.DAL.Stocks", "Stocks")
                        .WithMany("StockOwnerships")
                        .HasForeignKey("StocksSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webapplikasjoner_oblig.DAL.Users", "Users")
                        .WithMany("StockOwnerships")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stocks");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.StockQuotes", b =>
                {
                    b.HasOne("Webapplikasjoner_oblig.DAL.Stocks", "Stocks")
                        .WithMany("StockQuotes")
                        .HasForeignKey("StocksSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Trades", b =>
                {
                    b.HasOne("Webapplikasjoner_oblig.DAL.Stocks", "Stocks")
                        .WithMany("Trades")
                        .HasForeignKey("StocksSymbol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Webapplikasjoner_oblig.DAL.Users", "Users")
                        .WithMany("Trades")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stocks");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Stocks", b =>
                {
                    b.Navigation("StockOwnerships");

                    b.Navigation("StockQuotes");

                    b.Navigation("Trades");
                });

            modelBuilder.Entity("Webapplikasjoner_oblig.DAL.Users", b =>
                {
                    b.Navigation("Favorites")
                        .IsRequired();

                    b.Navigation("StockOwnerships");

                    b.Navigation("Trades");
                });
#pragma warning restore 612, 618
        }
    }
}
